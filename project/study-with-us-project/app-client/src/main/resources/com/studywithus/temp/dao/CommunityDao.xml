<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.studywithus.dao.CommunityDao">

	<resultMap type="Community" id="CommunityMap">
		<id column="cmnt_no" property="no" />
		<result column="category" property="category" />
		<result column="title" property="email" />
		<result column="content" property="content" />
		<result column="register_date" property="registeredDate" />
		<result column="view_count" property="viewCount" />

		<association property="writer" javaType="Member">
			<id column="writer_no" property="memberNo" />
			<result column="writer_email" property="email" />
		</association>
	</resultMap>

	<!-- ForWriter -->
	<select id="findAll" resultMap="CommunityMap">
		select
		cm.cmnt_no,
		cm.category,
		cm.title,
		cm.content,
		cm.register_date,
		cm.view_count,
		cf.cmnt_file_no,
		cf.name,
		m.member_no,
		m.email
		from
		cmnt cm
		inner join
		member m on
		cm.member_no=m.member_no
		left outer join cmnt_file cf on
		cm.cmnt_no=cf.cmnt_no
		order by member_no desc
	</select>

	<!-- ForLikes
	<select id="findAll" resultMap="CommunityMap">
		select
		count(member_no) as
		likes
		from
		cmnt_like
		where
		cmnt_no=#{no}
	</select>
-->

	<!-- <select id="findAll" resultMap="CommunityMap"> select c.comment_no, 
		c.content, c.register_date, m.member_no, m.email, mf.file_no, mf.name from 
		comment c inner join member m on c.member_no=m.member_no left outer join 
		member_file mf on m.member_no=mf.member_no where cmnt_no=#{no} </select> 
		ForComment -->

	<select id="findByNo" resultMap="CommunityMap"
		parameterType="int">

	</select>

	<select id="findByKeyword" resultMap="CommunityMap"
		parameterType="string">
		select
		cm.cmnt_no,
		cm.category,
		cm.title,
		cm.content,
		cm.register_date,
		cm.view_count,
		cf.cmnt_file_no,
		cf.name,
		m.member_no,
		m.email
		from
		cmnt cm
		inner join member m on cm.member_no=m.member_no
		left
		outer join
		cmnt_file cf on cm.cmnt_no=cf.cmnt_no
		where cm.title like
		(concat('%',?,'%'))
		or cm.content like (concat('%',?,'%'))
		or m.email
		like (concat('%',?,'%'))
		order by member_no desc
		<!-- -->
		select
		count(member_no) as likes
		from
		cmnt_like
		where
		cmnt_no=#{no}
		<!-- -->
		select
		c.comment_no,
		c.cmnt_no,
		c.content,
		c.register_date,
		m.member_no,
		m.email,
		mf.file_no,
		mf.name
		from
		comment c
		inner join member m on
		c.member_no=m.member_no
		left outer join member_file mf on
		m.member_no=mf.member_no
		where
		cmnt_no=#{no}
	</select>

	<insert id="insert" parameterType="community">
		insert into cmnt(category,title,content,member_no)
		values(#{category},#{title},#{content},#{member_no})
	</insert>

	<update id="update" parameterType="community">
		update cmnt set
		category=#{category},
		title=#{title},
		content=#{no}
		where cmnt_no=#{no}
	</update>

	<delete id="delete" parameterType="int">
		delete from cmnt where cmnt_no=#{no}
	</delete>

</mapper>







