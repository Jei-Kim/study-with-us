<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.studywithus.dao.StudyDao">
  
  <resultMap type="Study" id="StudyMap">
    <id column="study_no" property="no"/> 
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="area" property="area"/>
    <result column="register_date" property="registeredDate"/>
    <result column="view_count" property="viewCount"/>
    <result column="max_member" property="maxMembers"/>
    <result column="start_date" property="startDate"/>
    <result column="end_date" property="endDate"/>
    <result column="del_status" property="deleteStatus"/>
    <result column="price" property="price"/>
    <result column="status" property="studyStatus"/>
       
    <association property="writer" javaType="Member">
      <id column="writer_no" property="no"/>
      <result column="writer_name" property="name"/>
      <result column="writer_email" property="email"/>
    </association>
    
    <collection property="likeMembers" ofType="Member">
      <id column="likeMembers_no" property="no"/>
      <result column="likeMembers_name" property="name"/>
      <result column="likeMembers_email" property="email"/>
    </collection>
    
    <collection property="applicants" ofType="Member">
      <id column="applicants_no" property="no"/>
      <result column="applicants_name" property="name"/>
      <result column="applicants_email" property="email"/>
    </collection>

    <collection property="members" ofType="Member">
      <id column="members_no" property="no"/>
      <result column="members_name" property="name"/>
      <result column="members_email" property="email"/>
    </collection>
  </resultMap>
  
  <resultMap type="Payment" id="paymentMap">
  
  </resultMap>
  
  <sql id="select1"> <!-- 기본 조회 & 내생스 & 관심목록 용 -->
  select 
      st.study_no,
      st.title,
      st.content,
      st.area,
      st.register_date,
      st.view_count,
      st.max_member,
      st.start_date,
      st.end_date,
      st.del_status,
      st.price,
      st.status,
      m.member_no writer_no,
      m.name writer_name,
      m.email writer_email,
      m2.member_no likeMembers_no,
      m2.email likeMembers_email
    from 
      study st
    left outer join interest i on st.study_no=i.study_no
    inner join member m on st.member_no=m.member_no
    left outer join member m2 on i.member_no=m2.member_no
  </sql>

  <sql id="selectfindParticipate"> <!-- 내참스용 -->
   select 
      sm.status,
      st.study_no,
      st.title,
      st.content,
      st.area,
      st.register_date,
      st.view_count,
      st.max_member,
      st.start_date,
      st.end_date,
      st.del_status,
      st.price,
      st.status,
      m.member_no writer_no,
      m.name writer_name,
      m.email writer_email,
      m2.member_no members_no,
      m2.name members_name,
      m2.email members_email,
      m3.member_no likeMembers_no,
      m3.email likeMembers_email
    from 
      study_member sm
    inner join member m2 on sm.member_no=m2.member_no
    inner join study st on sm.study_no=st.study_no
    inner join member m on st.member_no=m.member_no
    left outer join interest i on sm.study_no=i.study_no  <!-- 내참스 좋아요 수 확인하기 위해 -->
    left outer join member m3 on i.member_no=m3.member_no  <!-- 내참스 좋아요 수 확인하기 위해 -->
  </sql>
  
  <sql id="selectfindApply"> <!-- 내참스 & 내가 지원한 스터디 용 -->
   select 
      sm.status,
      st.study_no,
      st.title,
      st.content,
      st.area,
      st.register_date,
      st.view_count,
      st.max_member,
      st.start_date,
      st.end_date,
      st.del_status,
      st.price,
      st.status,
      m.member_no writer_no,
      m.name writer_name,
      m.email writer_email,
      m2.member_no applicants_no,
      m2.name applicants_name,
      m2.email applicants_email,
      m3.member_no likeMembers_no,
      m3.email likeMembers_email
    from 
      study_member sm
    inner join member m2 on sm.member_no=m2.member_no
    inner join study st on sm.study_no=st.study_no
    inner join member m on st.member_no=m.member_no
    left outer join interest i on sm.study_no=i.study_no  <!-- 내가 지원한 스터디 좋아요 수 확인하기 위해 -->
    left outer join member m3 on i.member_no=m3.member_no  <!-- 내가 지원한 스터디 좋아요 수 확인하기 위해 -->
    
  </sql>
  
  <sql id="order1">
    order by 
      st.study_no asc
  </sql>
  
  <sql id="where1">
   where 
       m.member_no=#{writerNo}
  </sql>
  
  <sql id="where2">
  where 
       m2.member_no=#{writerNo} AND st.study_no=#{studyNo}
  </sql>
  
  <select id="findAll" resultMap="StudyMap">
    <include refid="select1"/>
    <include refid="order1"/>
  </select>
  
   <select id="findByKeyword" resultMap="StudyMap" parameterType="string">
  <include refid="select1"/>
    where 
      st.title like(concat('%',#{keyword},'%'))
      or st.content like (concat('%',#{keyword},'%'))
      or st.name like (concat('%',#{keyword},'%'))
    <include refid="order1"/>
   </select>
            
  <select id="findByNo" resultMap="StudyMap" parameterType="int">
   <include refid="select1"/>
    where 
       st.study_no=#{no}
  </select>
  
  <insert id="insert" parameterType="study">
   insert into 
     study(title,content,area,max_member,start_date,end_date,price,member_no)
    values(#{title},#{content},#{area},#{maxMembers},#{startDate},#{endDate},#{price},#{writer.no}) 
  </insert>
  
  <insert id="insertInterest">
  insert into 
    interest(member_no,study_no)
    values(#{memberNo},#{studyNo})
  </insert>
  
  <insert id="insertStudyMember">
    insert into
      study_member(member_no,study_no, status)
      values(#{memberNo},#{studyNo},#{status})
  </insert>

  <update id="update" parameterType="study">
   update study set
      title=#{title},
      content=#{content},
      area=#{area},
      view_count=#{viewCount},
      max_member=#{maxMembers},
      start_date=#{startDate},
      end_date=#{endDate},
      del_status=#{deleteStatus},
      price=#{price},
      status=#{studyStatus}     
   where study_no=#{no}  
  </update>
  
  <select id="findAllRegisterStudy" resultMap="StudyMap" parameterType="int">
    <include refid="select1"/>
      where 
       m.member_no=#{writerNo}
    <include refid="order1"/> 
  </select>
  
  <select id="findByNoRegisterStudy" resultMap="StudyMap">
    <include refid="select1"/>
    where 
       m.member_no=#{writerNo} AND st.study_no=#{studyNo}
  </select>


  <select id="findAllParticipateStudy" resultMap="StudyMap" parameterType="int">
    <include refid="selectfindParticipate"/>
      where 
       m2.member_no=#{memberNo}
    <include refid="order1"/> 
  </select>
  
  <select id="findByNoParticipateStudy" resultMap="StudyMap">
    <include refid="selectfindParticipate"/>
      where 
       m2.member_no=#{memberNo} AND st.study_no=#{studyNo}
  </select>

  
  <select id="findAllInterest" resultMap="StudyMap" parameterType="int">
    <include refid="select1"/>
    where 
       m2.member_no=#{memberNo}
    <include refid="order1"/> 
  </select>

  <select id="findByNoInterest" resultMap="StudyMap">
  <include refid="select1"/>
    where 
       m2.member_no=#{memberNo} AND st.study_no=#{studyNo}
  </select>
  
  
  <select id="findAllApplyStudy" resultMap="StudyMap" parameterType="int">
   <include refid="selectfindParticipate"/>
    where
      sm.member_no=#{memberNo} AND sm.status=0
    order by 
      sm.study_no asc
  </select>

  <select id="findByNOApplyStudy" resultMap="StudyMap">
   <include refid="selectfindParticipate"/>
    where
      sm.member_no=#{memberNo} AND sm.study_no=#{studyNo} AND sm.status=0
  </select>

  <delete id="delete" parameterType="int">
    delete from study
    where study_no=#{no}
  </delete>

  <delete id="deleteStudyMember">
    delete from study_member
    where member_no=#{memberNo} AND study_no={studyNo}
  </delete>
<!-- 
  <delete id="deleteInterest" parameterType="int">
    delete from interest
    where study_no=#{no}
  </delete>
  
  
  <delete id="deleteReview" parameterType="int">
    delete from review
    where study_no=#{no}
  </delete>

<select id="findLikeMembers" resultMap="StudyMap" parameterType="int">
 select
    m.member_no likeMembers_no,
    m.email likeMembers_email
    from 
      study st
      left outer join interest i on st.study_no=i.study_no
      inner join member m on i.member_no=m.member_no
  where
    i.study_no=#{studyNo}
  </select> 
  
  <sql id="selectMyStudy">
  select 
      st.study_no,
      st.title,
      st.content,
      st.area,
      st.register_date,
      st.view_count,
      st.max_member,
      st.start_date,
      st.end_date,
      st.del_status,
      st.price,
      st.status,
      m.member_no writer_no,
      m.name writer_name,
      m.email writer_email,
      m2.member_no likeMembers_no,
      m2.email likeMembers_email
    from 
      study st
    left outer join interest i on st.study_no=i.study_no
    inner join member m on st.member_no=m.member_no
    left outer join member m2 on i.member_no=m2.member_no
  </sql>
  
  <sql id="selectInterest">
  select 
      st.study_no,
      st.title,
      st.content,
      st.area,
      st.register_date,
      st.view_count,
      st.max_member,
      st.start_date,
      st.end_date,
      st.del_status,
      st.price,
      st.status,
      m.member_no writer_no,
      m.name writer_name,
      m.email writer_email,
      m2.member_no member_no,
      m2.email member_email
    from 
      study st
   inner join interest i on st.study_no=i.study_no
    inner join member m on st.member_no=m.member_no
    inner join member m2 on i.member_no=m2.member_no
    
  </sql>
  
 -->    
</mapper>